plugins {
    id("poseidon.java-conventions")
    id 'jacoco'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.github.spotbugs" version "4.7.2"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

//here we add all the dependencies notice that mason and geomason are not on maven so we need to add them separately
dependencies {

    api(project(":common"))
    api(project(":regulations"))
    api(project(":agents"))

    //fx collections; needed for sanity
    implementation fileTree(dir: 'libs/fxbase/', include: '*.jar')

    // DO NOT use opencsv for new code, as we want to phase it out.
    implementation "com.opencsv:opencsv:3.8"

    //kd tree
    implementation fileTree(dir: 'libs/rednaxela', include: '*.jar')

    //jung social network:
    implementation "net.sf.jung:jung-api:2.0.1"
    implementation 'net.sf.jung:jung-graph-impl:2.0.1'
    implementation 'net.sf.jung:jung-io:2.0.1'
    implementation 'net.sf.jung:jung-algorithms:2.0.1'

    //yaml parser, useful for reading configuration files
    api 'org.yaml:snakeyaml:1.33'
    //jcommander, useful to parse command line arguments
    implementation "com.beust:jcommander:1.81"

    //commons math
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    //discrete choosers
    implementation fileTree(dir: 'libs/discrete-choosers', include: '*.jar')

    // maximizer
    api group: 'de.openea', name: 'eva2', version: '2.2.0'

    //testing:
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.7'

    // Reference implementation of JSR-385 for units of measure
    api 'si.uom:si-quantity:2.1'
    api 'si.uom:si-units:2.1'
}

processTestResources.doFirst {
    // explicitly allow overriding files when copying resources
    duplicatesStrategy = "include"
}

tasks.withType(Test).configureEach {
    testLogging {
        exceptionFormat = 'full'
        showStackTraces = true
    }
}

spotbugs {
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

check.dependsOn jacocoTestReport
